variables:
 DEPLOY_BRANCH: $CI_COMMIT_REF_NAME
 KARMA: "
  let defaultConfFile = './karma.conf';
  const karmaConfig = require(defaultConfFile);
  module.exports = function(overridedConfig) {
    reporters = ['progress', 'junit'];
    browsers = ['ChromeHeadless'];
    customLaunchers = {
      ChromeHeadless: {
        base: 'Chrome',
        flags: [
          '--headless',
          '--disable-gpu',
          '--remote-debugging-port=9222',
          '--no-sandbox'
        ],
      }
    };
    junitReporter = {
      outputDir:  'reports/karma/',
      outputFile: 'karma-test-result.xml',
      suite: '',
      useBrowserName: false,
    };
    let mycfg = {
      set(val) {
        val.plugins = [
          require('karma-jasmine'),
          require('karma-chrome-launcher'),
          require('karma-jasmine-html-reporter'),
          require('karma-coverage-istanbul-reporter'),
          require('@angular-devkit/build-angular/plugins/karma'),
          require('karma-junit-reporter')
        ];
        val.reporters = reporters;
        val.junitReporter = junitReporter;
        val.browsers = browsers;
        val.customLaunchers = customLaunchers;
        val.singleRun = true;
        val.browserDisconnectTolerance = 1;
        val.browserNoActivityTimeout = 50000;
        overridedConfig.set(val);
      }
    };
    karmaConfig(mycfg);
  }
  "    

cache:
  paths:
    - .m2/repository
    - node_modules/

stages:
  - stage::build
  - test
  - lint
  - release
  - production

# build_mvn:
#   image: maven:3-jdk-11
#   stage: stage::build
#   tags:
#     - flashex-ci-jobs
#   script:
#     - cd common-ms
#     - mvn clean package
  
# junit_java:
#   image: maven:3-jdk-11
#   stage: test
#   tags:
#     - flashex-ci-jobs
#   when: always
#   script:
#   - cd common-ms
#   - mvn test

# pmd_maven:
#   image: maven:3-jdk-11
#   stage: lint
#   tags:
#     - flashex-ci-jobs
#   when: always
#   script:
#   - cd common-ms
#   - mvn pmd:check
# #---------Angular Build
# build_app:
#   image: circleci/node:11-browsers
#   stage: stage::build
#   tags:
#     - flashex-ci-jobs
#   script:
#     - cd common-ms/flashex-webapp/angular-boiler-plate/
#     - npm install
#-----------Angular Test
# karma_unit_tests:
#   image: circleci/node:11-browsers
#   stage: test
#   when: always
#   before_script:
#     - echo $KARMA > ./karma.config.js
#   tags:
#     - flashex-ci-jobs
#   script:
#     - cd common-ms/flashex-webapp/angular-boiler-plate/
#     - npm install
#     - npm install --save @angular/material @angular/cdk @angular/animations
#     - npm install --save karma-junit-reporter jasmine-reporters
#     - npm run test -- --watch=false --karma-config=karma.conf.js
#--------Angular Lint
# tslint_app:
#   image: circleci/node:11-browsers
#   stage: lint
#   when: always
#   tags:
#     - flashex-ci-jobs
#   script:
#   #------go to the path
#     - cd common-ms/flashex-webapp/angular-boiler-plate/
#     - npm install
#     - npm run lint -- --format json
#--- Deployment on Release branch    
release_deploy:
    image: ubuntu:latest
    stage: release
    tags:
      - flashex-ci-jobs
    before_script:
    #generate ssh key   
        - mkdir -p ~/.ssh     
        - echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa     
        - chmod 600 ~/.ssh/id_rsa     
        - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'   
    script:     
        - ls -ltr
        - /bin/sh .gitlab-deploy.sh   
    environment:     
        name: release     
        url: https:/flashex-dev.stackroute.io
    when: on_success
    only: 
        - release_v0.1.0
#-----Production Deployment
production_deploy:
    image: ubuntu:latest
    stage: production
    tags:
        - flashex-ci-jobs
    before_script: 
    #generate ssh key   
        - mkdir -p ~/.ssh     
        - echo -e "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa     
        - chmod 600 ~/.ssh/id_rsa     
        - 'echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'   
    script:     
        - ls -ltr
        - /bin/sh .gitlab-deploy.sh   
    environment:     
        name: production     
        url: http://flashex-dev.stackroute.io
    when: manual
    only: 
        - master
